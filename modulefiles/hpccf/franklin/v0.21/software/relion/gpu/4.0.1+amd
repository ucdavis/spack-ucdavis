#%Module1.0
## Module file created by spack (https://github.com/spack/spack) on 2023-10-16 11:28:45.340435
##
## relion@4.0.1%gcc@11.4.0+allow_ctf_in_sagd+cuda+double~double-gpu~external_motioncor2~gpu_delay+gui~ipo~mklfft build_system=cmake build_type=RelWithDebInfo cuda_arch=75 generator=make purpose=cluster arch=linux-ubuntu22.04-zen2/unwyr74
##
## Configure options: -DCMAKE_C_FLAGS=-g -DCMAKE_CXX_FLAGS=-g -DGUI=True -DDoublePrec_CPU=True -DDoublePrec_GPU=False -DALLOW_CTF_IN_SAGD=True -DMKLFFT=False -DALTCPU=False -DCUDA=ON -DCudaTexture=ON -DCUDA_ARCH=75 -DTHRUST_IGNORE_CUB_VERSION_CHECK=1 -DAMDFFTW=ON
##


module-whatis {RELION (for REgularised LIkelihood OptimisatioN, pronounce rely-on) is a stand-alone computer program that employs an empirical Bayesian approach to refinement of (multiple) 3D reconstructions or 2D class averages in electron cryo-microscopy (cryo-EM).}

proc ModulesHelp { } {
    puts stderr {Name   : relion}
    puts stderr {Version: 4.0.1}
    puts stderr {Target : zen2}
    puts stderr {}
    puts stderr {RELION (for REgularised LIkelihood OptimisatioN, pronounce rely-on) is a}
    puts stderr {stand-alone computer program that employs an empirical Bayesian approach}
    puts stderr {to refinement of (multiple) 3D reconstructions or 2D class averages in}
    puts stderr {electron cryo-microscopy (cryo-EM).}
}

conflict relion

prepend-path --delim {:} LD_LIBRARY_PATH {/share/apps/22.04/spack/opt/software/linux-ubuntu22.04-zen2/gcc-11.4.0/relion-4.0.1-unwyr74jbzccwruahzkwskj2wcm2o7ey/lib}
prepend-path --delim {:} PATH {/share/apps/22.04/spack/opt/software/linux-ubuntu22.04-zen2/gcc-11.4.0/relion-4.0.1-unwyr74jbzccwruahzkwskj2wcm2o7ey/bin}
prepend-path --delim {:} PKG_CONFIG_PATH {/share/apps/22.04/spack/opt/software/linux-ubuntu22.04-zen2/gcc-11.4.0/relion-4.0.1-unwyr74jbzccwruahzkwskj2wcm2o7ey/lib/pkgconfig}
prepend-path --delim {:} CMAKE_PREFIX_PATH {/share/apps/22.04/spack/opt/software/linux-ubuntu22.04-zen2/gcc-11.4.0/relion-4.0.1-unwyr74jbzccwruahzkwskj2wcm2o7ey/.}
prepend-path --delim {:} XLOCALEDIR {/share/apps/22.04/spack/opt/software/linux-ubuntu22.04-x86_64_v3/gcc-11.4.0/libx11-1.8.4-zaqf7dicjkl3i2sg2ciot74vsehx7k47/share/X11/locale}
setenv RELION_ROOT {/share/apps/22.04/spack/opt/software/linux-ubuntu22.04-zen2/gcc-11.4.0/relion-4.0.1-unwyr74jbzccwruahzkwskj2wcm2o7ey}
setenv RELION_TOPAZ_EXECUTABLE {/share/apps/spack/spack-ucdavis/bin/wrappers/topaz}
setenv RELION_CTFFIND_EXECUTABLE {/share/apps/22.04/spack/opt/software/linux-ubuntu22.04-zen2/gcc-11.4.0/ctffind-4.1.14-mcco7yaew52w3gkj5yod3ceoj2gzc6sd/bin/ctffind}
setenv RELION_QSUB_TEMPLATE {/share/apps/22.04/spack/spack-ucdavis/templates/hpccf/franklin/relion.4.0.1.gpu.zen2.slurm.template.sh}


try {
    set user_email [exec -ignorestderr /usr/bin/grep --color=never -Po "^$env(USER):.*\<\\K.*?(?=\>)" /etc/passwd]
} on error {e} {
    set user_email ""
}
setenv USER_EMAIL $user_email

if [module-info mode load] {
}

if [module-info mode unload] {
}



prereq motioncor2
prereq gctf/1.06
prereq ghostscript

setenv RELION_MOTIONCOR2_EXECUTABLE [file join [getenv MOTIONCOR2_ROOT] "bin/MotionCor2"]
#setenv RELION_CTFFIND_EXECUTABLE [file join [getenv CTFFIND_ROOT] "bin/ctffind"]
setenv RELION_GCTF_EXECUTABLE [file join [getenv GCTF_ROOT] "bin/Gctf-v1.06_sm_30_cu8.0_x86_64"]

setenv RELION_QSUB_EXTRA_COUNT "4"

setenv RELION_QSUB_EXTRA1 "Email:"
setenv RELION_QSUB_EXTRA1_DEFAULT $user_email
setenv RELION_QSUB_EXTRA1_HELP "The email address to use for slurm notifications."

setenv RELION_QSUB_EXTRA2 "Memory per CPU (MB):"
setenv RELION_QSUB_EXTRA2_DEFAULT "10000"
setenv RELION_QSUB_EXTRA2_HELP "Memory used per CPU thread, in MiB. Total memory can be calculated as (number of MPI tasks) * (memory per CPU)."

setenv RELION_QSUB_EXTRA3 "Job Time:"
setenv RELION_QSUB_EXTRA3_DEFAULT "12:00:00"
setenv RELION_QSUB_EXTRA3_HELP "SLURM job time limit in format HH:MM:SS or DAYS-HH:MM:SS."

setenv RELION_QSUB_EXTRA4 "Account:"
setenv RELION_QSUB_EXTRA4_HELP "SLURM --account parameter."

setenv RELION_QUEUE_USE "yes"
setenv RELION_QSUB_COMMAND "sbatch"
setenv RELION_SHELL "bash"
setenv RELION_SCRATCH_DIR "/tmp/"
setenv RELION_QUEUE_NAME "low"



setenv RELION_QSUB_EXTRA_COUNT "5"

setenv RELION_QSUB_EXTRA5 "GPU resources:"
setenv RELION_QSUB_EXTRA5_DEFAULT "2"
setenv RELION_QSUB_EXTRA5_HELP "Number (and optionally type) of GPUs to request for this job. If only an integer is supplied, will request any GPU. If TYPE:NUM is supplied (example: a4000:4), specific models of GPU will be requested. Note that specific combinations of GPU type and job queue may fail; that is, if you select \"high\" as your queue and \"a4000:4\" as your GPU resources, but your account does not have access to the A4000 nodes' high queue, the job will fail to submit. You can view available GPU resource types by running sinfo -o \"%20N %10c %10m %30G\""

